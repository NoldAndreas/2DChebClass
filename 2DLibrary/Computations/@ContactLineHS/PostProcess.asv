function PostProcess(this)

    res = DataStorage('Equilibrium',@ComputePostProcess,);

    this.AdsorptionIsotherm    = this.AdsorptionIsotherm;
    res.disjoiningPressure_II = this.disjoiningPressure_II;
    res.disjoiningPressure_IV = this.disjoiningPressure_IV;

    res.hII       = this.hII;
    res.hIII      = this.hIII;
    res.hIV       = this.hIV;
    this.hContour  = this.hContour;
         
    function res = ComputePostProcess()
        
         ComputeAdsorptionIsotherm(this,'load'); %epw = 0.7: '\2DChebData\POF_FMT_ContactLine\deg90\IterativeContinuationPostProcess\2014_8_13_16_55_32.496'
         Compute_DisjoiningPressure_II(this);
         Compute_DisjoiningPressure_IV(this);

    %     %Compute height profiles    
         Compute_hII(this,'II');
         Compute_hIII(this);
         Compute_hII(this,'IV');
         Compute_hI(this);
         Compute_hContour(this,0.5);
            
         res.AdsorptionIsotherm    = this.AdsorptionIsotherm;
         res.disjoiningPressure_II = this.disjoiningPressure_II;
         res.disjoiningPressure_IV = this.disjoiningPressure_IV;
        
         res.hII       = this.hII;
         res.hIII      = this.hIII;
         res.hIV       = this.hIV;
         res.hContour  = this.hContour;        
    end
% 
%     InitAnalysisGrid(this,y1Int,y2Int);
%     ComputeInterfaceContour(this);
%     
%     ComputeAdsorptionIsotherm(this);	    
%     disjoingPressure1DCheck();    
%     
%     PostProcess_2DDisjoiningPressure(this);   
%     SumRule_DisjoiningPotential(this);
    
    %f = f2;
    %f = fB;            
%    this.grandPot      = f;   
%    this.grandPot2     = f2;           
    
  %  this.wIntLoc       = wIntLoc;
   % this.wIntHS        = wIntHS;
    %Compute Film thickness as contour line       
    
    
end